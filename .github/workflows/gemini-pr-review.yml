name: Gemini PR Review

on:
  pull_request:
    types: [opened, synchronize] # Triggers on PR open and code updates

jobs:
  gemini_review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 5

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' # Or your preferred version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-generativeai
          pip install google-generativeai tenacity

      - name: Get PR diff (Base64 Encode)
        id: get_diff
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          diff=$(git diff origin/${{ github.event.pull_request.base.ref }} HEAD)
          encoded_diff=$(echo "$diff" | base64)
          echo "$encoded_diff" > diff.b64 

      - name: Gemini API Call
        id: gemini_review_call
        run: |
          python <<EOF
          #... (rest of the script)

          try:
              review_text = generate_review(prompt)

              # Print the REVIEW output here
              print(f"REVIEW<<EOF")
              escaped_review = review_text.replace('\n', '\\n')
              print(f"{escaped_review}\nEOF")

          except Exception as e:
              print(f"Error generating review: {e}")
              traceback.print_exc()
              # Print the REVIEW output with the error message
              print(f"REVIEW<<EOF")
              escaped_review = f"An error occurred during Gemini review: {e}".replace('\n', '\\n')
              print(f"{escaped_review}\nEOF")

          EOF
          exit 0

      - name: Set Default Text
        id: default_text
        run: |
          echo "DEFAULT_TEXT=This is a default review comment." >> $GITHUB_OUTPUT
      
      - name: Post Default Review Comment
        if: steps.default_text.outputs.DEFAULT_TEXT!= ''
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "${{ steps.default_text.outputs.DEFAULT_TEXT }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print Raw Review Output
        run: |
          echo "Raw Review Output: ${{ steps.gemini_review_call.outputs.REVIEW }}"
          
      - name: Post Review Comment
        if: steps.gemini_review_call.outputs.REVIEW!= ''
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "$(echo "${{ steps.gemini_review_call.outputs.REVIEW }}" | sed 's/\\n/\n/g')"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Empty review message
        if: steps.gemini_review_call.outputs.REVIEW == ''
        run: |
          echo "Gemini review was empty, no comment posted"
